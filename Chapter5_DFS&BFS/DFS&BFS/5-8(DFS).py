'''
1. 탐색 시작 노드를 스택에 삽입하고 방문 처리
2. 스택의 최상단 노드에 방문하지 않은 인접노드가 있으면 그 인접 노드를 스택에 넣고 방문 처리
2-2. 방문하지 않은 인접노드가 없으면 스택에서 최상단 노드를 꺼냄
3. 2번의 과정을 더 이상 수행할 수 없을 때까지 반복
'''

#가장 깊은 노드에 닿을때까지 탐색

'''
Step -
시작노드 1 스택 삽입, 방문 처리
인접노드 중 가장 작은 노드 스택 삽입, 방문 처리
방문하지 않은 인접노드 삽입, 방문
반복
스택 최상단 노드(마지막 삽입노드)의 인접노드가 없으면, Pop
그 다음 최상단 노드의 방문하지 않은 인접노드 삽입, 처리
반복

모두 방문 완료 후,
탐색순서 = 스택 들어간 순서
'''

#스택은 사용하지 않아도 됨 ( 재귀로 처리 )

def dfs(graph, v, visited):
    #현재 노드 방문 처리
    visited[v] = True
    print(v, end=' ')

    # 다른 노드 재귀 방문
    for i in graph[v]:
        if not visited[i]:
            dfs(graph,i,visited)

# 노드 정보 (2차원 리스트)
graph = [
    [],
    [2,3,8],
    [1,7],
    [1,4,5],
    [3,5],
    [3,4],
    [7],
    [2,6,8],
    [1,7]
]

visited = [False] * 9

dfs(graph,1,visited)